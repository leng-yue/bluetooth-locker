name: CI

on:
  - push
    

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip poetry
          poetry config virtualenvs.create false --local
          sudo apt-get install -y libbluetooth-dev
          poetry install
      - name: Lint
        run: |
          poetry run isort bluetooth_locker -c --profile black
          poetry run black bluetooth_locker --check

  publish:
    name: Publish package
    runs-on: ubuntu-latest
    needs: test
    # if: startsWith(github.ref, 'refs/tags/v')
    strategy:
      matrix: 
        python-version: ["3.8", "3.9", "3.10"]
      
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip poetry
          poetry config virtualenvs.create false --local
          sudo apt-get install -y libbluetooth-dev python-setuptools
          poetry install
      - name: Build
        run: poetry build
      - name: Publish
        env:
          POETRY_PYPI_TOKEN_PYPI: ${{ secrets.PYPI_TOKEN }}
        run: poetry publish
